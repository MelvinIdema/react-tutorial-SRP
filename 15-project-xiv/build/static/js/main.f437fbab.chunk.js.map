{"version":3,"sources":["AppContext.js","Product.js","Loader.js","StoreFront.js","Navbar.js","index.js"],"names":["AppContext","createContext","AppProvider","props","useState","theme","setTheme","currency","setCurrency","value","toggleTheme","Provider","children","Product","count","setCount","details","className","src","image","width","alt","name","description","disabled","onClick","Loader","height","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","StoreFront","products","setProducts","isLoading","setIsLoading","context","useContext","useEffect","fetch","then","response","json","data","catch","error","console","log","finally","map","product","id","Navbar","onChange","e","target","App","classes","clsx","render","document","querySelector"],"mappings":"yKACMA,EAAaC,0BAEnB,SAASC,EAAYC,GACjB,MAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,OAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAGMC,EAAQ,CACVJ,QACAK,YAJgB,kBAAMJ,EAAmB,SAAVD,EAAmB,QAAU,SAK5DE,WACAC,eAGJ,OAAO,cAACR,EAAWW,SAAZ,CAAqBF,MAAOA,EAA5B,SAAoCN,EAAMS,WCbtC,SAASC,EAAQV,GAC5B,MAA0BC,mBAAS,GAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAEOC,EAAWb,EAAXa,QAWP,OAAO,sBAAKC,UAAU,UAAf,UACH,qBAAKC,IAAKF,EAAQG,MAAOC,MAAM,KAAKC,IAAKL,EAAQM,OACjD,sBAAKL,UAAU,eAAf,UACI,6BAAKD,EAAQM,OACb,4BAAIN,EAAQO,iBAEhB,sBAAKN,UAAU,kBAAf,UACI,wBAAQA,UAAU,cAAcO,SAAoB,IAAVV,EAAaW,QAb/D,WACQX,EAAQ,GACRC,EAASD,EAAQ,IAWjB,eACA,oBAAIG,UAAU,gBAAd,SAA+BH,GAAgB,KAC/C,wBAAQG,UAAU,cAAcQ,QAlBxC,WACIV,EAASD,EAAQ,IAiBb,qBCvBG,SAASY,IACpB,OAAO,qBAAKT,UAAU,UAAUG,MAAM,OAAOO,OAAO,OAAOC,QAAQ,YAAYC,MAAM,6BAA9E,SACH,wBAAQZ,UAAU,OAAOa,KAAK,OAAOC,YAAY,IAAIC,cAAc,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,SCCtF,SAASC,IACpB,MAAgChC,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAAkClC,oBAAS,GAA3C,mBAAOmC,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,qBAAW1C,GAc3B,OAZA2C,qBAAU,WACNC,MAAM,4DACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EAAYU,MAEfC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC3BG,SAAQ,WACLb,GAAa,QAEtB,IAEK,qCACJ,6CAAgBC,EAAQlC,YACxB,sBAAKU,UAAU,cAAf,UACKsB,GAAa,cAACb,EAAD,IACbW,EAASiB,KAAI,SAAAC,GAAO,OAAI,cAAC1C,EAAD,CAA0BG,QAASuC,GAArBA,EAAQC,aCvB5C,SAASC,IACpB,IAAMhB,EAAUC,qBAAW1C,GAC3B,OAAO,oDACS,yBAAQ0D,SAAU,SAAAC,GAAC,OAAIlB,EAAQjC,YAAYmD,EAAEC,OAAOnD,QAApD,UACZ,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAHG,WAKMgC,EAAQpC,MALd,UAK2B,wBAAQoB,QAASgB,EAAQ/B,YAAzB,0BAC9B,0B,iBCHR,SAASmD,IACL,IAAMpB,EAAUC,qBAAW1C,GACrB8D,EAAUC,YAAK,CACjB,KAA0B,SAAlBtB,EAAQpC,QAGpB,OAAO,sBAAKY,UAAW6C,EAAhB,UACH,cAACL,EAAD,IACA,cAACrB,EAAD,OAIR4B,iBAAO,cAAC9D,EAAD,UAAa,cAAC2D,EAAD,MAAuBI,SAASC,cAAc,kB","file":"static/js/main.f437fbab.chunk.js","sourcesContent":["import React, {useState, createContext} from \"react\";\nconst AppContext = createContext();\n\nfunction AppProvider(props) {\n    const [theme, setTheme] = useState(\"dark\");\n    const [currency, setCurrency] = useState(\"USD\");\n    const toggleTheme = () => setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n\n    const value = {\n        theme,\n        toggleTheme,\n        currency,\n        setCurrency,\n    }\n\n    return <AppContext.Provider value={value}>{props.children}</AppContext.Provider>;\n}\n\nexport {AppContext, AppProvider};","import React, {useState} from \"react\";\n\nexport default function Product(props) {\n    const [count, setCount] = useState(0);\n\n    const {details} = props;\n\n    function handleIncrementClick() {\n        setCount(count + 1);\n    }\n    function handleDecrementClick() {\n        if (count > 0){\n            setCount(count - 1);\n        }\n    }\n\n    return <div className=\"product\">\n        <img src={details.image} width=\"50\" alt={details.name} />\n        <div className=\"product-info\">\n            <h2>{details.name}</h2>\n            <p>{details.description}</p>\n        </div>\n        <div className=\"product-buttons\">\n            <button className=\"product-sub\" disabled={count === 0} onClick={handleDecrementClick}>-</button>\n            <h3 className=\"product-count\">{count ? count : \"\"}</h3>\n            <button className=\"product-add\" onClick={handleIncrementClick}>+</button>\n        </div>\n    </div>\n}","import React from \"react\";\n\nexport default function Loader() {\n    return <svg className=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n    </svg>;\n}","import React, {useEffect, useState, useContext} from \"react\";\nimport {AppContext} from \"./AppContext.js\";\nimport Product from \"./Product.js\";\nimport Loader from \"./Loader.js\";\n\nexport default function StoreFront() {\n    const [products, setProducts] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const context = useContext(AppContext);\n\n    useEffect(() => {\n        fetch(\"https://react-tutorial-demo.firebaseio.com/products.json\")\n            .then(response => response.json())\n            .then(data => {\n                setProducts(data);\n            })\n            .catch(error => console.log(error))\n            .finally(() => {\n                setIsLoading(false);\n            })\n    }, []);\n\n    return (<>\n        <p>Shopping in {context.currency}</p>\n        <div className=\"store-front\">\n            {isLoading && <Loader />}\n            {products.map(product => <Product key={product.id} details={product} />)}\n        </div>\n    </>);\n}","import React, {useContext} from \"react\";\nimport {AppContext} from \"./AppContext\";\n\nexport default function Navbar() {\n    const context = useContext(AppContext);\n    return <>\n        Shopping in <select onChange={e => context.setCurrency(e.target.value)}>\n        <option value=\"USD\">USD</option>\n        <option value=\"EUR\">EUR</option>\n    </select>\n        - Using {context.theme} theme <button onClick={context.toggleTheme}>Toggle theme</button>\n        <hr />\n    </>;\n}","import React, {useContext} from \"react\";\nimport {render} from \"react-dom\";\nimport StoreFront from \"./StoreFront.js\";\nimport Navbar from \"./Navbar.js\";\nimport {AppContext, AppProvider} from \"./AppContext.js\";\nimport clsx from \"clsx\";\nimport \"./index.css\";\n\nfunction App() {\n    const context = useContext(AppContext);\n    const classes = clsx({\n        'dark': context.theme === 'dark'\n    })\n\n    return <div className={classes}>\n        <Navbar />\n        <StoreFront />\n    </div>;\n}\n\nrender(<AppProvider><App /></AppProvider>, document.querySelector(\"#react-root\"));"],"sourceRoot":""}