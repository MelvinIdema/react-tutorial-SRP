{"version":3,"sources":["Product.js","Loader.js","StoreFront.js","useFetch.js","index.js"],"names":["Product","props","useState","count","setCount","details","className","src","image","width","alt","name","description","disabled","onClick","Loader","height","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","StoreFront","products","setProducts","baseUrl","loading","setLoading","get","url","Promise","resolve","reject","fetch","then","response","json","data","catch","error","post","body","method","headers","JSON","stringify","useFetch","useEffect","map","product","id","App","loggedIn","setLoggedIn","render","document","querySelector"],"mappings":"yKAEe,SAASA,EAAQC,GAC5B,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEOC,EAAWJ,EAAXI,QAWP,OAAO,sBAAKC,UAAU,UAAf,UACH,qBAAKC,IAAKF,EAAQG,MAAOC,MAAM,KAAKC,IAAKL,EAAQM,OACjD,sBAAKL,UAAU,eAAf,UACI,6BAAKD,EAAQM,OACb,4BAAIN,EAAQO,iBAEhB,sBAAKN,UAAU,kBAAf,UACI,wBAAQA,UAAU,cAAcO,SAAoB,IAAVV,EAAaW,QAb/D,WACQX,EAAQ,GACRC,EAASD,EAAQ,IAWjB,eACA,oBAAIG,UAAU,gBAAd,SAA+BH,GAAgB,KAC/C,wBAAQG,UAAU,cAAcQ,QAlBxC,WACIV,EAASD,EAAQ,IAiBb,qBCvBG,SAASY,IACpB,OAAO,qBAAKT,UAAU,UAAUG,MAAM,OAAOO,OAAO,OAAOC,QAAQ,YAAYC,MAAM,6BAA9E,SACH,wBAAQZ,UAAU,OAAOa,KAAK,OAAOC,YAAY,IAAIC,cAAc,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,SCEtF,SAASC,IACpB,MAAgCvB,mBAAS,IAAzC,mBAAOwB,EAAP,KAAiBC,EAAjB,KACA,ECNW,SAAkBC,GAC7B,MAA8B1B,oBAAS,GAAvC,mBAAO2B,EAAP,KAAgBC,EAAhB,KA8CA,MAAO,CAAEC,IA5CT,SAAaC,GACT,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,MAAMR,EAAUI,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAKA,EAED,OADAV,GAAW,GACJK,EAAOK,GAElBV,GAAW,GACXI,EAAQM,MAEXC,OAAM,SAAAC,GACHZ,GAAW,GACXK,EAAOO,UA8BTC,KAzBd,SAAcX,EAAKY,GACf,OAAO,IAAIX,SAAQ,SAACC,EAASC,GACzBC,MAAMR,EAAUI,EAAK,CACjBa,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBF,KAAMG,KAAKC,UAAUJ,KAEpBP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAKA,EAED,OADAV,GAAW,GACJK,EAAOK,GAElBV,GAAW,GACXI,EAAQM,MAEXC,OAAM,SAAAC,GACHZ,GAAW,GACXK,EAAOO,UAKHb,WDzCGoB,CAAS,+CAAzBlB,EAAP,EAAOA,IAAKF,EAAZ,EAAYA,QAOZ,OALAqB,qBAAU,WACNnB,EAAI,iBACCM,MAAK,SAAAG,GAAI,OAAIb,EAAYa,QAC/B,IAEI,sBAAKlC,UAAU,cAAf,UACFuB,GAAW,cAACd,EAAD,IACXW,EAASyB,KAAI,SAAAC,GAAO,OAAI,cAACpD,EAAD,CAA0BK,QAAS+C,GAArBA,EAAQC,U,MEXvD,SAASC,IACL,MAAgCpD,oBAAS,GAAzC,mBAAOqD,EAAP,KAAiBC,EAAjB,KAEA,OAAID,EACO,qCACH,cAAC9B,EAAD,IACA,wBAAQnB,UAAU,kBAAkBQ,QAAS,kBAAM0C,GAAY,IAA/D,uBAGG,qCACH,8CACA,wBAAQlD,UAAU,kBAAkBQ,QAAS,kBAAM0C,GAAY,IAA/D,sBAKZC,iBAAO,cAACH,EAAD,IAASI,SAASC,cAAc,kB","file":"static/js/main.84719633.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nexport default function Product(props) {\n    const [count, setCount] = useState(0);\n\n    const {details} = props;\n\n    function handleIncrementClick() {\n        setCount(count + 1);\n    }\n    function handleDecrementClick() {\n        if (count > 0){\n            setCount(count - 1);\n        }\n    }\n\n    return <div className=\"product\">\n        <img src={details.image} width=\"50\" alt={details.name} />\n        <div className=\"product-info\">\n            <h2>{details.name}</h2>\n            <p>{details.description}</p>\n        </div>\n        <div className=\"product-buttons\">\n            <button className=\"product-sub\" disabled={count === 0} onClick={handleDecrementClick}>-</button>\n            <h3 className=\"product-count\">{count ? count : \"\"}</h3>\n            <button className=\"product-add\" onClick={handleIncrementClick}>+</button>\n        </div>\n    </div>\n}","import React from \"react\";\n\nexport default function Loader() {\n    return <svg className=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n    </svg>;\n}","// StoreFront.js\nimport React, {useState, useEffect} from \"react\";\nimport Product from \"./Product.js\";\nimport Loader from \"./Loader.js\";\nimport useFetch from \"./useFetch.js\";\n\nexport default function StoreFront() {\n    const [products, setProducts] = useState([]);\n    const {get, loading} = useFetch('https://react-tutorial-demo.firebaseio.com/');\n\n    useEffect(() => {\n        get('products.json')\n            .then(data => setProducts(data));\n    }, [])\n\n    return <div className=\"store-front\">\n        {loading && <Loader />}\n        {products.map(product => <Product key={product.id} details={product} />)}\n    </div>;\n}","import { useState } from \"react\";\n\nexport default function useFetch(baseUrl) {\n    const [loading, setLoading] = useState(true);\n\n    function get(url) {\n        return new Promise((resolve, reject) => {\n            fetch(baseUrl + url)\n                .then(response => response.json())\n                .then(data => {\n                    if (!data) {\n                        setLoading(false);\n                        return reject(data);\n                    }\n                    setLoading(false);\n                    resolve(data);\n                })\n                .catch(error => {\n                    setLoading(false);\n                    reject(error);\n                });\n        });\n    }\n\n    function post(url, body) {\n        return new Promise((resolve, reject) => {\n            fetch(baseUrl + url, {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(body)\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (!data) {\n                        setLoading(false);\n                        return reject(data);\n                    }\n                    setLoading(false);\n                    resolve(data);\n                })\n                .catch(error => {\n                    setLoading(false);\n                    reject(error);\n                });\n        });\n    }\n\n    return { get, post, loading };\n};","import React, {useState} from \"react\";\nimport {render} from \"react-dom\";\nimport StoreFront from \"./StoreFront.js\";\n\nimport \"./index.css\";\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    if (loggedIn){\n        return <>\n            <StoreFront />\n            <button className=\"btn btn-outline\" onClick={() => setLoggedIn(false)}>Logout</button>\n        </>;\n    }else {\n        return <>\n            <h2>Please login</h2>\n            <button className=\"btn btn-primary\" onClick={() => setLoggedIn(true)}>Login</button>\n        </>;\n    }\n}\n\nrender(<App />, document.querySelector(\"#react-root\"));"],"sourceRoot":""}